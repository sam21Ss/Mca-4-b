import React from 'react';
import { motion } from 'framer-motion';
import { ArrowRight, Shield, Brain, Search, AlertTriangle } from 'lucide-react';

const HeroSection = () => {
  return (
    <section className="relative min-h-screen flex items-center justify-center overflow-hidden">
      {/* Background Image with Overlay */}
      <div 
        className="absolute inset-0 bg-cover bg-center bg-no-repeat"
        style={{
          backgroundImage: 'url(https://images.pexels.com/photos/8386440/pexels-photo-8386440.jpeg)',
        }}
      >
        <div className="absolute inset-0 bg-gradient-to-br from-slate-900/95 via-blue-900/90 to-slate-800/95"></div>
      </div>
      
      {/* Floating Elements */}
      <div className="absolute inset-0 overflow-hidden">
        {[...Array(6)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute w-20 h-20 border border-cyan-400/20 rounded-full"
            style={{
              left: `${20 + i * 15}%`,
              top: `${10 + i * 12}%`,
            }}
            animate={{
              y: [0, -20, 0],
              opacity: [0.3, 0.7, 0.3],
            }}
            transition={{
              duration: 3 + i * 0.5,
              repeat: Infinity,
              ease: "easeInOut",
            }}
          />
        ))}
      </div>
      
      {/* Content */}
      <div className="relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <motion.div
          initial={{ opacity: 0, y: 50 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 1, delay: 0.2 }}
          className="space-y-8"
        >
          {/* Badge */}
          <motion.div
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8, delay: 0.5 }}
            className="inline-flex items-center space-x-2 bg-slate-800/60 backdrop-blur-xl border border-cyan-400/30 rounded-full px-6 py-3"
          >
            <Shield className="w-5 h-5 text-cyan-400" />
            <span className="text-cyan-400 text-sm font-medium">Advanced AI Threat Detection</span>
          </motion.div>
          
          {/* Main Headline */}
          <motion.h1
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1, delay: 0.7 }}
            className="text-5xl md:text-7xl font-bold text-white leading-tight"
          >
            Artificial Intelligence &
            <span className="bg-gradient-to-r from-cyan-400 to-blue-400 bg-clip-text text-transparent">
              {" "}Cyber Threats
            </span>
          </motion.h1>
          
          {/* Subtitle */}
          <motion.p
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1, delay: 0.9 }}
            className="text-xl md:text-2xl text-slate-300 max-w-4xl mx-auto leading-relaxed"
          >
            Comprehensive research platform for identifying, analyzing, and mitigating 
            emerging AI-powered cyber threats. Built for academic researchers and cybersecurity professionals.
          </motion.p>
          
          {/* CTA Buttons */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1, delay: 1.1 }}
            className="flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-6"
          >
            <motion.button
              onClick={() => {
                const detectionSection = document.getElementById('detection-tool');
                if (detectionSection) {
                  detectionSection.scrollIntoView({ behavior: 'smooth' });
                  // Add a small delay then trigger demo analysis
                  setTimeout(() => {
                    const textTab = detectionSection.querySelector('[data-tab="text"]');
                    const textarea = detectionSection.querySelector('textarea');
                    const analyzeButton = detectionSection.querySelector('[data-analyze="true"]');
                    
                    if (textTab) textTab.click();
                    if (textarea) {
                      textarea.value = "This content appears to be generated by artificial intelligence using machine learning algorithms. It contains suspicious phishing patterns that may be attempting to deceive users.";
                      textarea.dispatchEvent(new Event('input', { bubbles: true }));
                    }
                    if (analyzeButton) {
                      setTimeout(() => analyzeButton.click(), 500);
                    }
                  }, 1000);
                }
              }}
              className="group bg-gradient-to-r from-blue-500 to-cyan-400 text-white px-8 py-4 rounded-xl font-medium text-lg flex items-center space-x-2 hover:shadow-xl hover:shadow-blue-500/25 transition-all duration-300"
              whileHover={{ scale: 1.05, boxShadow: "0 0 30px rgba(59, 130, 246, 0.4)" }}
              whileTap={{ scale: 0.95 }}
            >
              <Search className="w-5 h-5" />
              <span>Start Threat Detection</span>
              <ArrowRight className="w-5 h-5 group-hover:translate-x-1 transition-transform" />
            </motion.button>
            
            <motion.button
              className="group bg-slate-800/60 backdrop-blur-xl border border-slate-600 text-white px-8 py-4 rounded-xl font-medium text-lg flex items-center space-x-2 hover:bg-slate-700/60 transition-all duration-300"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
            >
              <Brain className="w-5 h-5" />
              <span>Explore Research</span>
            </motion.button>
          </motion.div>
          
          {/* Stats */}
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 1, delay: 1.3 }}
            className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-3xl mx-auto mt-16"
          >
            {[
              { icon: AlertTriangle, label: "AI Threat Types", value: "15+" },
              { icon: Shield, label: "Detection Accuracy", value: "95%" },
              { icon: Brain, label: "Research Papers", value: "200+" }
            ].map((stat, index) => {
              const Icon = stat.icon;
              return (
                <motion.div
                  key={index}
                  className="bg-slate-800/40 backdrop-blur-xl border border-slate-700/50 rounded-2xl p-6 text-center"
                  whileHover={{ scale: 1.05, borderColor: "rgba(34, 211, 238, 0.5)" }}
                  transition={{ duration: 0.3 }}
                >
                  <Icon className="w-8 h-8 text-cyan-400 mx-auto mb-3" />
                  <div className="text-3xl font-bold text-white mb-1">{stat.value}</div>
                  <div className="text-slate-400 text-sm">{stat.label}</div>
                </motion.div>
              );
            })}
          </motion.div>
        </motion.div>
      </div>
      
      {/* Scroll Indicator */}
      <motion.div
        className="absolute bottom-8 left-1/2 transform -translate-x-1/2"
        animate={{ y: [0, 10, 0] }}
        transition={{ duration: 2, repeat: Infinity }}
      >
        <div className="w-6 h-10 border-2 border-cyan-400/50 rounded-full flex justify-center">
          <div className="w-1 h-3 bg-cyan-400 rounded-full mt-2"></div>
        </div>
      </motion.div>
    </section>
  );
};

export default HeroSection;